#!csharp

using System.CommandLine;
using System.CommandLine.Invocation;
using Microsoft.DotNet.Interactive;
using RandomNumberExtension;

var randomCommand = new Command("#!get-random-number", "Generates and displays a random number.")
{
    new Option<int>(new[] { "-l", "--lower" }, () => 0, "The lower bound of the number to generate.  Defaults to '0'."),
    new Option<int>(new[] { "-u", "--upper" }, () => 10, "The upper bound of the number to generate.  Defaults to '10'."),
};

randomCommand.Handler = CommandHandler.Create(
    (int lower, int upper, KernelInvocationContext invocationContext) => {
        var generator = new RandomNumberGenerator();
        var value = generator.GetRandomNumber(lower, upper);
        invocationContext.DisplayAs($"<div style='color: green; font-size: xxx-large;'>{value}</div>", "text/html");
    }
);

Kernel.Root.AddDirective(randomCommand);

if (KernelInvocationContext.Current is { } currentContext)
{
    currentContext.DisplayAs("Added magic command `#!get-random-number`.  Please see `#!get-random-number --help for more information.`", "text/markdown");
}
