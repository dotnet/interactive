{
  "name": "dotnet-interactive-vscode",
  "displayName": ".NET Interactive Notebooks",
  "//description": "During build, the description gets the git SHA appended to it.",
  "description": ".NET Interactive Notebooks for VS Code.",
  "icon": "images/icon.png",
  "publisher": "ms-dotnettools",
  "author": "Microsoft Corporation",
  "license": "MIT",
  "enableProposedApi": true,
  "preview": true,
  "//version": "The version '42.42.42' is auto-set during CI package creation.",
  "version": "42.42.42",
  "engines": {
    "vscode": "1.56.0-insider"
  },
  "bugs": {
    "url": "https://github.com/dotnet/interactive/issues"
  },
  "repository": {
    "url": "https://github.com/dotnet/interactive"
  },
  "categories": [
    "Data Science",
    "Machine Learning",
    "Notebooks",
    "Visualization"
  ],
  "keywords": [
    ".NET Core",
    ".NET",
    "C#",
    "data science",
    "dotnet",
    "F#",
    "interactive programming",
    "ipynb",
    "Jupyter",
    "notebooks",
    "PowerShell"
  ],
  "activationEvents": [
    "onUri",
    "onNotebook:dotnet-interactive",
    "onNotebook:*",
    "onCommand:dotnet-interactive.acquire",
    "onCommand:dotnet-interactive.newNotebook",
    "onCommand:dotnet-interactive.openNotebook",
    "onCommand:dotnet-interactive.saveAsNotebook"
  ],
  "main": "./out/src/common/vscode/extension.js",
  "extensionDependencies": [],
  "contributes": {
    "notebookProvider": [
      {
        "viewType": "dotnet-interactive",
        "displayName": ".NET Interactive Notebook",
        "selector": [
          {
            "filenamePattern": "*.{dib,dotnet-interactive}"
          }
        ]
      }
    ],
    "jupyter.kernels": [
      {
        "title": ".NET Interactive (C#)",
        "defaultLanguage": "dotnet-interactive.csharp"
      },
      {
        "title": ".NET Interactive (F#)",
        "defaultLanguage": "dotnet-interactive.fsharp"
      },
      {
        "title": ".NET Interactive (PowerShell)",
        "defaultLanguage": "dotnet-interactive.pwsh"
      }
    ],
    "configuration": {
      "title": ".NET Interactive Notebook",
      "properties": {
        "dotnet-interactive.kernelTransportArgs": {
          "type": "array",
          "default": [
            "{dotnet_path}",
            "tool",
            "run",
            "dotnet-interactive",
            "--",
            "[vscode]",
            "stdio",
            "--working-dir",
            "{working_dir}"
          ],
          "description": "Command and arguments used to start a notebook session."
        },
        "dotnet-interactive.kernelTransportWorkingDirectory": {
          "type": "string",
          "default": "{global_storage_path}",
          "description": "The working directory in which the kernel transport process is started."
        },
        "dotnet-interactive.languageServiceDelay": {
          "type": "number",
          "default": 500,
          "description": "The delay in ms before language services are invoked."
        },
        "dotnet-interactive.interactiveToolSource": {
          "type": "string",
          "default": "https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json",
          "description": "The NuGet source to use when acquiring the .NET Interactive tool."
        },
        "dotnet-interactive.minimumDotNetSdkVersion": {
          "type": "string",
          "default": "5.0",
          "description": "The minimum required version of the .NET SDK."
        },
        "dotnet-interactive.minimumInteractiveToolVersion": {
          "type": "string",
          "default": "1.0.222202",
          "description": "The minimum required version of the .NET Interactive tool."
        }
      }
    },
    "commands": [
      {
        "command": "dotnet-interactive.acquire",
        "title": "Install .NET Interactive"
      },
      {
        "command": "dotnet-interactive.openNotebook",
        "title": ".NET Interactive: Open notebook"
      },
      {
        "command": "dotnet-interactive.saveAsNotebook",
        "title": ".NET Interactive: Save notebook as..."
      },
      {
        "command": "dotnet-interactive.newNotebook",
        "title": ".NET Interactive: Create new blank notebook"
      },
      {
        "command": "dotnet-interactive.restartCurrentNotebookKernel",
        "title": ".NET Interactive: Restart the current notebook's kernel"
      },
      {
        "command": "dotnet-interactive.stopCurrentNotebookKernel",
        "title": ".NET Interactive: Stop the current notebook's kernel"
      },
      {
        "command": "dotnet-interactive.stopAllNotebookKernels",
        "title": ".NET Interactive: Stop all notebook kernels"
      }
    ],
    "keybindings": [
      {
        "command": "dotnet-interactive.newNotebook",
        "key": "ctrl+alt+shift+n",
        "mac": "cmd+alt+shift+n"
      }
    ],
    "languages": [
      {
        "id": "dotnet-interactive",
        "aliases": [
          ".NET Interactive"
        ]
      },
      {
        "id": "dotnet-interactive.csharp",
        "aliases": [
          "C# (.NET Interactive)"
        ],
        "configuration": "./syntaxes/csharp.language-configuration.json"
      },
      {
        "id": "dotnet-interactive.fsharp",
        "aliases": [
          "F# (.NET Interactive)"
        ],
        "configuration": "./syntaxes/fsharp.language-configuration.json"
      },
      {
        "id": "dotnet-interactive.html",
        "aliases": [
          "HTML (.NET Interactive)"
        ]
      },
      {
        "id": "dotnet-interactive.javascript",
        "aliases": [
          "JavaScript (.NET Interactive)"
        ],
        "configuration": "./syntaxes/javascript.language-configuration.json"
      },
      {
        "id": "dotnet-interactive.magic-commands",
        "aliases": [
          "Magic Commands (.NET Interactive)"
        ],
        "configuration": "./syntaxes/magic-commands.language-configuration.json"
      },
      {
        "id": "dotnet-interactive.markdown",
        "aliases": [
          "Markdown (.NET Interactive)"
        ]
      },
      {
        "id": "dotnet-interactive.pwsh",
        "aliases": [
          "PowerShell (.NET Interactive)"
        ],
        "configuration": "./syntaxes/powershell.language-configuration.json"
      },
      {
        "id": "dotnet-interactive.sql",
        "aliases": [
          "SQL (.NET Interactive)"
        ],
        "configuration": "./syntaxes/sql.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "dotnet-interactive",
        "scopeName": "source.dotnet-interactive",
        "path": "./syntaxes/source.dotnet-interactive.tmGrammar.json",
        "embeddedLanguages": {
          "language.switch.csharp": "dotnet-interactive.csharp",
          "language.switch.fsharp": "dotnet-interactive.fsharp",
          "language.switch.html": "dotnet-interactive.html",
          "language.switch.javascript": "dotnet-interactive.javascript",
          "language.switch.markdown": "dotnet-interactive.markdown",
          "language.switch.powershell": "dotnet-interactive.pwsh",
          "language.switch.sql": "dotnet-interactive.sql"
        }
      },
      {
        "language": "dotnet-interactive.csharp",
        "scopeName": "source.dotnet-interactive.csharp",
        "path": "./syntaxes/source.dotnet-interactive.csharp.tmGrammar.json",
        "embeddedLanguages": {
          "language.switch.csharp": "dotnet-interactive.csharp",
          "language.switch.fsharp": "dotnet-interactive.fsharp",
          "language.switch.html": "dotnet-interactive.html",
          "language.switch.javascript": "dotnet-interactive.javascript",
          "language.switch.markdown": "dotnet-interactive.markdown",
          "language.switch.powershell": "dotnet-interactive.pwsh",
          "language.switch.sql": "dotnet-interactive.sql"
        }
      },
      {
        "language": "dotnet-interactive.fsharp",
        "scopeName": "source.dotnet-interactive.fsharp",
        "path": "./syntaxes/source.dotnet-interactive.fsharp.tmGrammar.json",
        "embeddedLanguages": {
          "language.switch.csharp": "dotnet-interactive.csharp",
          "language.switch.fsharp": "dotnet-interactive.fsharp",
          "language.switch.html": "dotnet-interactive.html",
          "language.switch.javascript": "dotnet-interactive.javascript",
          "language.switch.markdown": "dotnet-interactive.markdown",
          "language.switch.powershell": "dotnet-interactive.pwsh",
          "language.switch.sql": "dotnet-interactive.sql"
        }
      },
      {
        "language": "dotnet-interactive.html",
        "scopeName": "source.dotnet-interactive.html",
        "path": "./syntaxes/source.dotnet-interactive.html.tmGrammar.json",
        "embeddedLanguages": {
          "language.switch.csharp": "dotnet-interactive.csharp",
          "language.switch.fsharp": "dotnet-interactive.fsharp",
          "language.switch.html": "dotnet-interactive.html",
          "language.switch.javascript": "dotnet-interactive.javascript",
          "language.switch.markdown": "dotnet-interactive.markdown",
          "language.switch.powershell": "dotnet-interactive.pwsh",
          "language.switch.sql": "dotnet-interactive.sql"
        }
      },
      {
        "language": "dotnet-interactive.javascript",
        "scopeName": "source.dotnet-interactive.javascript",
        "path": "./syntaxes/source.dotnet-interactive.javascript.tmGrammar.json",
        "embeddedLanguages": {
          "language.switch.csharp": "dotnet-interactive.csharp",
          "language.switch.fsharp": "dotnet-interactive.fsharp",
          "language.switch.html": "dotnet-interactive.html",
          "language.switch.javascript": "dotnet-interactive.javascript",
          "language.switch.markdown": "dotnet-interactive.markdown",
          "language.switch.powershell": "dotnet-interactive.pwsh",
          "language.switch.sql": "dotnet-interactive.sql"
        }
      },
      {
        "language": "dotnet-interactive.magic-commands",
        "scopeName": "source.dotnet-interactive.magic-commands",
        "path": "./syntaxes/source.dotnet-interactive.magic-commands.tmGrammar.json",
        "embeddedLanguages": {
          "language.switch.csharp": "dotnet-interactive.csharp",
          "language.switch.fsharp": "dotnet-interactive.fsharp",
          "language.switch.html": "dotnet-interactive.html",
          "language.switch.javascript": "dotnet-interactive.javascript",
          "language.switch.markdown": "dotnet-interactive.markdown",
          "language.switch.powershell": "dotnet-interactive.pwsh",
          "language.switch.sql": "dotnet-interactive.sql"
        }
      },
      {
        "language": "dotnet-interactive.markdown",
        "scopeName": "source.dotnet-interactive.markdown",
        "path": "./syntaxes/source.dotnet-interactive.markdown.tmGrammar.json",
        "embeddedLanguages": {
          "language.switch.csharp": "dotnet-interactive.csharp",
          "language.switch.fsharp": "dotnet-interactive.fsharp",
          "language.switch.html": "dotnet-interactive.html",
          "language.switch.javascript": "dotnet-interactive.javascript",
          "language.switch.markdown": "dotnet-interactive.markdown",
          "language.switch.powershell": "dotnet-interactive.pwsh",
          "language.switch.sql": "dotnet-interactive.sql"
        }
      },
      {
        "language": "dotnet-interactive.pwsh",
        "scopeName": "source.dotnet-interactive.powershell",
        "path": "./syntaxes/source.dotnet-interactive.powershell.tmGrammar.json",
        "embeddedLanguages": {
          "language.switch.csharp": "dotnet-interactive.csharp",
          "language.switch.fsharp": "dotnet-interactive.fsharp",
          "language.switch.html": "dotnet-interactive.html",
          "language.switch.javascript": "dotnet-interactive.javascript",
          "language.switch.markdown": "dotnet-interactive.markdown",
          "language.switch.powershell": "dotnet-interactive.pwsh",
          "language.switch.sql": "dotnet-interactive.sql"
        }
      },
      {
        "language": "dotnet-interactive.sql",
        "scopeName": "source.dotnet-interactive.sql",
        "path": "./syntaxes/source.dotnet-interactive.sql.tmGrammar.json",
        "embeddedLanguages": {
          "language.switch.csharp": "dotnet-interactive.csharp",
          "language.switch.fsharp": "dotnet-interactive.fsharp",
          "language.switch.html": "dotnet-interactive.html",
          "language.switch.javascript": "dotnet-interactive.javascript",
          "language.switch.markdown": "dotnet-interactive.markdown",
          "language.switch.powershell": "dotnet-interactive.pwsh",
          "language.switch.sql": "dotnet-interactive.sql"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "npm run lint && tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "integration-test": "node ./out/tests/integration/runTest.js",
    "pretest": "npm run compile",
    "test": "mocha --opts mocha.opts",
    "ciTest": "npm test -- --reporter mocha-multi-reporters --reporter-options configFile=testConfig.json",
    "tdd": "npm test -- --watch",
    "package": "npx vsce package"
  },
  "devDependencies": {
    "@types/chai": "4.2.11",
    "@types/chai-as-promised": "^7.1.3",
    "@types/chai-fs": "2.0.2",
    "@types/glob": "7.1.1",
    "@types/mocha": "7.0.2",
    "@types/node": "13.11.0",
    "@types/node-fetch": "^2.5.7",
    "@types/tmp": "0.2.0",
    "@types/uuid": "^8.3.0",
    "@typescript-eslint/eslint-plugin": "2.26.0",
    "@typescript-eslint/parser": "2.26.0",
    "chai": "4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-fs": "2.0.0",
    "del-cli": "^3.0.1",
    "eslint": "6.8.0",
    "eslint-plugin-deprecation": "^1.2.0",
    "glob": "7.1.6",
    "mocha": "7.1.1",
    "mocha-multi-reporters": "1.1.7",
    "mocha-trx-reporter": "3.2.4",
    "tmp": "0.2.1",
    "typescript": "4.1.3",
    "vsce": "1.75.0",
    "vscode-oniguruma": "1.3.1",
    "vscode-test": "1.3.0",
    "vscode-textmate": "5.1.1"
  },
  "dependencies": {
    "compare-versions": "3.6.0",
    "node-fetch": "^2.6.1",
    "uuid": "^8.3.2"
  }
}
