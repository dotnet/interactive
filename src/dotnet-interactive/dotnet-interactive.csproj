<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <RootNamespace>Microsoft.DotNet.Interactive.App</RootNamespace>
    <AssemblyName>Microsoft.DotNet.Interactive.App</AssemblyName>
    <LangVersion>Latest</LangVersion>
    <AssetTargetFallback>$(AssetTargetFallback);dotnet5.4;portable-net45+win8</AssetTargetFallback>
  </PropertyGroup>

  <PropertyGroup>
    <PackageId>Microsoft.dotnet-interactive</PackageId>
    <ToolCommandName>dotnet-interactive</ToolCommandName>
    <IsPackable>true</IsPackable>
    <PackageDescription>Command line tool for interactive programming with C#, F#, and PowerShell, including support for Jupyter Notebooks.</PackageDescription>
    <PackageTags>dotnet interactive Jupyter csharp fsharp PowerShell</PackageTags>
    <PackAsTool>true</PackAsTool>
    <AutoGenerateAssemblyVersion>false</AutoGenerateAssemblyVersion>
    <PreReleaseVersionLabel></PreReleaseVersionLabel>
    <Description>.NET Interactive</Description>
    <NoWarn>$(NoWarn);8002</NoWarn><!-- Markdig isn't strongly signed -->
    <NoWarn>$(NoWarn);NU5129</NoWarn><!-- Improper warning about missing props file.  See https://github.com/NuGet/Home/issues/8627 -->
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="obj\**" />
    <Content Remove="obj\**" />
    <EmbeddedResource Remove="obj\**" />
    <None Remove="obj\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="resources\logo-32x32.png" />
    <Content Remove="resources\*.js" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="resources\*.js" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.1.0" />
    <PackageReference Include="Serilog.Sinks.RollingFileAlternate" Version="2.0.9" />
    <PackageReference Include="Pocket.Disposable" Version="1.1.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Pocket.TypeDiscovery" Version="0.5.0">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="PocketLogger" Version="0.4.0">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="PocketLogger.For.ApplicationInsights" Version="0.4.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="PocketLogger.Subscribe" Version="0.7.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="System.CommandLine" Version="2.0.0-beta1.20478.1" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.14.0" />
    <PackageReference Include="FSharp.Compiler.Private.Scripting">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ContentFiles\" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.DotNet.Interactive.CSharp\Microsoft.DotNet.Interactive.CSharp.csproj" />
    <ProjectReference Include="..\Microsoft.DotNet.Interactive.FSharp.Wrapper\Microsoft.DotNet.Interactive.FSharp.Wrapper.csproj" />
    <ProjectReference Include="..\Microsoft.DotNet.Interactive.FSharp\Microsoft.DotNet.Interactive.FSharp.fsproj" />
    <ProjectReference Include="..\Microsoft.DotNet.Interactive.Http\Microsoft.DotNet.Interactive.Http.csproj" />
    <ProjectReference Include="..\Microsoft.DotNet.Interactive.PowerShell\Microsoft.DotNet.Interactive.PowerShell.csproj" />
    <ProjectReference Include="..\Microsoft.DotNet.Interactive.Jupyter\Microsoft.DotNet.Interactive.Jupyter.csproj" />
    <ProjectReference Include="..\Microsoft.DotNet.Interactive.Telemetry\Microsoft.DotNet.Interactive.Telemetry.csproj" />
    <ProjectReference Include="..\Microsoft.DotNet.Interactive\Microsoft.DotNet.Interactive.csproj" />
    <ProjectReference Include="..\XPlot.DotNet.Interactive.KernelExtensions\XPlot.DotNet.Interactive.KernelExtensions.csproj" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="$(IntermediateOutputPath)/dotnetKernel.zip">
      <LogicalName>dotnetKernel.zip</LogicalName>
    </EmbeddedResource>
    <EmbeddedResource Include="resources\logo-32x32.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="resources\*.js" />
  </ItemGroup>

  <Target Name="PrepareKernels">
    <PropertyGroup>
      <KernelRootDirectory>$(MSBuildProjectDirectory)/ContentFiles</KernelRootDirectory>
      <KernelSourceDirectory>$(KernelRootDirectory)/kernels</KernelSourceDirectory>
      <KernelDestinationDirectory>$(IntermediateOutputPath)dotnetKernel</KernelDestinationDirectory>
    </PropertyGroup>
    <ItemGroup>
      <KernelFiles Include="$(KernelSourceDirectory)/**/*.json" SkipUnchangedFiles="true" />
      <KernelFolders Include="$([System.IO.Directory]::GetDirectories($(KernelSourceDirectory)))" />
      <KernelLogoFiles Include="$(KernelRootDirectory)/*.png" SkipUnchangedFiles="true" />
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <JsApiRoot>$(MSBuildThisFileDirectory)/../Microsoft.DotNet.Interactive.Js/</JsApiRoot>
  </PropertyGroup>

  <ItemGroup>
    <TypescriptInputs Include="$(JsApiRoot)package.json" />
    <TypescriptInputs Include="$(JsApiRoot)package-lock.json" />
    <TypescriptInputs Include="$(JsApiRoot)rollup.config.js" />
    <TypescriptInputs Include="$(JsApiRoot)tsconfig.json" />
    <TypescriptInputs Include="$(JsApiRoot)src/**/*.ts" />
    <None Remove="resources\logo-456x456.png" />
    <None Remove="resources\logo-64x64.png" />

    <TypescriptOutputFiles Include="$(JsApiRoot)dist/dotnet-interactive.js" />
    <TypescriptOutputFiles Include="$(JsApiRoot)dist/dotnet-interactive-code-mirror.js" />

    <EmbeddedResource Include="@(TypescriptOutputFiles)" LogicalName="$(AssemblyName).resources.%(FileName)%(Extension)" />

    <EmbeddedResource Include="resources\logo-456x456.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </EmbeddedResource>

    <EmbeddedResource Include="resources\logo-64x64.png">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>

  <Target Name="InstallNodeModules">
    <Exec Command="npm i" WorkingDirectory="$(JsApiRoot)" />
  </Target>

  <Target Name="CompileTypescript" Inputs="@(TypescriptInputs)" Outputs="@(TypescriptOutputFiles)" DependsOnTargets="InstallNodeModules" BeforeTargets="BeforeBuild" Condition="'$(NCrunch)' != '1' And '$(BuildingInsideVisualStudio)' != 'true'">
    <Exec Command="npm run build" WorkingDirectory="$(JsApiRoot)" />
  </Target>

  <Target Name="CopyKernelSpecificFiles" DependsOnTargets="PrepareKernels;CopyLogoFiles">
    <CreateItem Include="%(KernelFolders.Identity)/**/*.json" AdditionalMetadata="Destination=$([System.IO.Path]::GetFileName(%(KernelFolders.Identity)))">
      <Output TaskParameter="Include" ItemName="KernelSpecificJsonFiles" />
    </CreateItem>

    <CreateItem Include="%(KernelFolders.Identity)/**/*.png" AdditionalMetadata="Destination=$([System.IO.Path]::GetFileName(%(KernelFolders.Identity)))">
      <Output TaskParameter="Include" ItemName="KernelSpecificLogoFiles" />
    </CreateItem>
    <Copy SourceFiles="%(KernelSpecificJsonFiles.FullPath)" DestinationFolder="$(KernelDestinationDirectory)/%(KernelSpecificJsonFiles.Destination)" />
    <Copy SourceFiles="%(KernelSpecificLogoFiles.FullPath)" DestinationFolder="$(KernelDestinationDirectory)/%(KernelSpecificLogoFiles.Destination)" />
  </Target>

  <Target Name="CopyLogoFiles" DependsOnTargets="PrepareKernels">
    <CreateItem Include="@(KernelLogoFiles)" AdditionalMetadata="Destination=$([System.IO.Path]::GetFileName(%(KernelFolders.Identity)))">
      <Output TaskParameter="Include" ItemName="AllKernelLogoFiles" />
    </CreateItem>
    <Copy SourceFiles="%(AllKernelLogoFiles.FullPath)" DestinationFolder="$(KernelDestinationDirectory)/%(AllKernelLogoFiles.Destination)" />
  </Target>

  <Target Name="ZipDotnetKernel" BeforeTargets="PrepareForBuild" DependsOnTargets="CopyKernelSpecificFiles;CopyLogoFiles">
    <ZipDirectory SourceDirectory="$(KernelDestinationDirectory)" DestinationFile="$(IntermediateOutputPath)/dotnetKernel.zip" Overwrite="true" />
  </Target>

  <!--

  Exports the stable (non-beta) version number used by this tool as an Azure DevOps variable.  This enables subsequent
  non-MSBuild tools to have access to the Arcade-computed value.  E.g., the VS Code extension.

  -->
  <Target Name="ExportVersionNumberForAzureDevOps" AfterTargets="Build">
    <Message Text="##vso[task.setvariable variable=StableToolVersionNumber]$(Version)" Importance="high" />
  </Target>

</Project>

