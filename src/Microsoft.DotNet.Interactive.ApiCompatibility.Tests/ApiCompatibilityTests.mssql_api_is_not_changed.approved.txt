Microsoft.DotNet.Interactive.SqlServer
  public class BatchSummary
    .ctor()
    public System.String ExecutionElapsed { get; set;}
    public System.String ExecutionEnd { get; set;}
    public System.String ExecutionStart { get; set;}
    public System.Boolean HasError { get; set;}
    public System.Int32 Id { get; set;}
    public ResultSetSummary[] ResultSetSummaries { get; set;}
    public SelectionData Selection { get; set;}
  public class CellValue
    .ctor()
    public System.String DisplayValue { get; set;}
    public System.String InvariantCultureDisplayValue { get; set;}
    public System.Boolean IsNull { get; set;}
    public System.Int64 RowId { get; set;}
  public class ChooseMsSqlKernelDirective : Microsoft.DotNet.Interactive.ChooseKernelDirective, System.Collections.Generic.IEnumerable<System.CommandLine.Symbol>, System.Collections.IEnumerable, System.CommandLine.ICommand, System.CommandLine.IIdentifierSymbol, System.CommandLine.ISymbol, System.CommandLine.Suggestions.ISuggestionSource
    .ctor(Microsoft.DotNet.Interactive.Kernel kernel)
    public System.CommandLine.Option<System.String> NameOption { get;}
  public class ColumnInfo
    .ctor()
    public System.Nullable<System.Boolean> AllowDBNull { get; set;}
    public System.String BaseCatalogName { get; set;}
    public System.String BaseColumnName { get; set;}
    public System.String BaseSchemaName { get; set;}
    public System.String BaseServerName { get; set;}
    public System.String BaseTableName { get; set;}
    public System.String ColumnName { get; set;}
    public System.Nullable<System.Int32> ColumnOrdinal { get; set;}
    public System.Nullable<System.Int32> ColumnSize { get; set;}
    public System.String DataType { get; set;}
    public System.String DataTypeName { get; set;}
    public System.Nullable<System.Boolean> IsAliased { get; set;}
    public System.Nullable<System.Boolean> IsAutoIncrement { get; set;}
    public System.Nullable<System.Boolean> IsBytes { get; set;}
    public System.Nullable<System.Boolean> IsChars { get; set;}
    public System.Nullable<System.Boolean> IsExpression { get; set;}
    public System.Nullable<System.Boolean> IsHidden { get; set;}
    public System.Nullable<System.Boolean> IsIdentity { get; set;}
    public System.Nullable<System.Boolean> IsJson { get; set;}
    public System.Nullable<System.Boolean> IsKey { get; set;}
    public System.Nullable<System.Boolean> IsLong { get; set;}
    public System.Nullable<System.Boolean> IsReadOnly { get; set;}
    public System.Nullable<System.Boolean> IsSqlVariant { get; set;}
    public System.Nullable<System.Boolean> IsUdt { get; set;}
    public System.Nullable<System.Boolean> IsUnique { get; set;}
    public System.Nullable<System.Boolean> IsXml { get; set;}
    public System.Nullable<System.Int32> NumericPrecision { get; set;}
    public System.Nullable<System.Int32> NumericScale { get; set;}
    public System.String UdtAssemblyQualifiedName { get; set;}
  public class CompletionCommand
    .ctor()
    public System.Object[] Arguments { get; set;}
    public System.String command { get; set;}
    public System.String Title { get; set;}
    public System.String Tooltip { get; set;}
  public class CompletionContext
    .ctor()
    public System.String TriggerCharacter { get; set;}
    public System.Int32 TriggerKind { get; set;}
  public class CompletionParams
    .ctor()
    public CompletionContext Context { get; set;}
    public Position Position { get; set;}
    public TextDocumentIdentifier TextDocument { get; set;}
  public enum CompletionTriggerKind : System.Enum, System.IComparable, System.IConvertible, System.IFormattable
    Invoked=1
    TriggerCharacter=2
    TriggerForIncompleteCompletions=3
  public class ConnectionCompleteParams
    .ctor()
    public System.String ConnectionId { get; set;}
    public ConnectionSummary ConnectionSummary { get; set;}
    public System.String ErrorMessage { get; set;}
    public System.Int32 ErrorNumber { get; set;}
    public System.String Messages { get; set;}
    public System.String OwnerUri { get; set;}
    public ServerInfo ServerInfo { get; set;}
    public System.String Type { get; set;}
  public class ConnectionDetails
    .ctor()
    public System.Collections.Generic.Dictionary<System.String,System.String> Options { get; set;}
  public class ConnectionSummary
    .ctor()
    public System.String DatabaseName { get; set;}
    public System.String ServerName { get; set;}
    public System.String UserName { get; set;}
  public class ConnectMsSqlCommand : Microsoft.DotNet.Interactive.Connection.ConnectKernelCommand<MsSqlKernelConnector>, System.Collections.Generic.IEnumerable<System.CommandLine.Symbol>, System.Collections.IEnumerable, System.CommandLine.ICommand, System.CommandLine.IIdentifierSymbol, System.CommandLine.ISymbol, System.CommandLine.Suggestions.ISuggestionSource
    .ctor(System.String resolvedToolsServicePath)
    public System.Threading.Tasks.Task<Microsoft.DotNet.Interactive.Kernel> ConnectKernelAsync(Microsoft.DotNet.Interactive.KernelInfo kernelInfo, MsSqlKernelConnector connector, Microsoft.DotNet.Interactive.KernelInvocationContext context)
  public class ConnectParams
    .ctor()
    public ConnectionDetails Connection { get; set;}
    public System.String OwnerUri { get; set;}
  public class DidChangeTextDocumentParams
    .ctor()
    public TextDocumentChangeEvent[] ContentChanges { get; set;}
    public VersionedTextDocumentIdentifier TextDocument { get; set;}
  public class DisconnectParams
    .ctor()
    public System.String OwnerUri { get; set;}
  public class IntelliSenseReadyParams
    .ctor()
    public System.String OwnerUri { get; set;}
  public class MessageParams
    .ctor()
    public ResultMessage Message { get; set;}
    public System.String OwnerUri { get; set;}
  public class MsSqlKernelConnector, Microsoft.DotNet.Interactive.Connection.IKernelConnector
    .ctor(System.Boolean createDbContext, System.String connectionString)
    public System.String ConnectionString { get;}
    public System.Boolean CreateDbContext { get;}
    public System.String PathToService { get; set;}
    public System.Threading.Tasks.Task<Microsoft.DotNet.Interactive.Kernel> ConnectKernelAsync(Microsoft.DotNet.Interactive.KernelInfo kernelInfo)
  public class MsSqlKernelExtension, Microsoft.DotNet.Interactive.IKernelExtension
    .ctor()
    public System.Threading.Tasks.Task OnLoadAsync(Microsoft.DotNet.Interactive.Kernel kernel)
  public class Position
    .ctor()
    public System.Int32 Character { get; set;}
    public System.Int32 Line { get; set;}
  public class QueryCancelParams
    .ctor()
    public System.String OwnerUri { get; set;}
  public class QueryCancelResult
    .ctor()
    public System.String Messages { get; set;}
  public class QueryCompleteParams
    .ctor()
    public BatchSummary[] BatchSummaries { get; set;}
    public System.String OwnerUri { get; set;}
  public class QueryExecuteResult
    .ctor()
  public class QueryExecuteStringParams
    .ctor()
    public System.String OwnerUri { get; set;}
    public System.String Query { get; set;}
  public class QueryExecuteSubsetParams
    .ctor()
    public System.Int32 BatchIndex { get; set;}
    public System.String OwnerUri { get; set;}
    public System.Int32 RowsCount { get; set;}
    public System.Int32 RowsStartIndex { get; set;}
  public class QueryExecuteSubsetResult
    .ctor()
    public ResultSetSubset ResultSubset { get; set;}
  public class Range
    .ctor()
    public Position End { get; set;}
    public Position Start { get; set;}
  public class ResultMessage
    .ctor(System.String message, System.Boolean isError, System.Nullable<System.Int32> batchId)
    .ctor()
    public System.Nullable<System.Int32> BatchId { get; set;}
    public System.Boolean IsError { get; set;}
    public System.String Message { get; set;}
    public System.String Time { get; set;}
    public System.String ToString()
  public class ResultSetSubset
    .ctor()
    public System.Int32 RowCount { get; set;}
    public CellValue[][] Rows { get; set;}
  public class ResultSetSummary
    .ctor()
    public System.Int32 BatchId { get; set;}
    public ColumnInfo[] ColumnInfo { get; set;}
    public System.Boolean Complete { get; set;}
    public System.Int32 Id { get; set;}
    public System.Int64 RowCount { get; set;}
  public class SelectionData
    .ctor()
    public System.Int32 EndColumn { get; set;}
    public System.Int32 EndLine { get; set;}
    public System.Int32 StartColumn { get; set;}
    public System.Int32 StartLine { get; set;}
  public class ServerInfo
    .ctor()
    public System.Int32 AzureVersion { get; set;}
    public System.Int32 EngineEditionId { get; set;}
    public System.Boolean IsCloud { get; set;}
    public System.String MachineName { get; set;}
    public System.Collections.Generic.Dictionary<System.String,System.Object> Options { get; set;}
    public System.String OsVersion { get; set;}
    public System.String ServerEdition { get; set;}
    public System.String ServerLevel { get; set;}
    public System.Int32 ServerMajorVersion { get; set;}
    public System.Int32 ServerMinorVersion { get; set;}
    public System.Int32 ServerReleaseVersion { get; set;}
    public System.String ServerVersion { get; set;}
  public class SqlCompletionItem
    .ctor()
    public CompletionCommand Command { get; set;}
    public System.Object Data { get; set;}
    public System.String Detail { get; set;}
    public System.String Documentation { get; set;}
    public System.String FilterText { get; set;}
    public System.String InsertText { get; set;}
    public System.Nullable<SqlCompletionItemKind> Kind { get; set;}
    public System.String Label { get; set;}
    public System.Nullable<System.Boolean> Preselect { get; set;}
    public System.String SortText { get; set;}
    public TextEdit TextEdit { get; set;}
  public enum SqlCompletionItemKind : System.Enum, System.IComparable, System.IConvertible, System.IFormattable
    Text=1
    Method=2
    Function=3
    Constructor=4
    Field=5
    Variable=6
    Class=7
    Interface=8
    Module=9
    Property=10
    Unit=11
    Value=12
    Enum=13
    Keyword=14
    Snippet=15
    Color=16
    File=17
    Reference=18
  public class TextDocumentChangeEvent
    .ctor()
    public Range Range { get; set;}
    public System.Nullable<System.Int32> RangeLength { get; set;}
    public System.String Text { get; set;}
  public class TextDocumentIdentifier
    .ctor()
    public System.String Uri { get; set;}
  public class TextEdit
    .ctor()
    public System.String NewText { get; set;}
    public Range Range { get; set;}
  public class ToolsServiceClient, System.IDisposable
    public static DidChangeTextDocumentParams GetDocumentChangeForText(System.Uri ownerUri, System.String newText, System.String oldText)
    .ctor(System.String serviceExePath = null, System.String arguments = null)
    public System.Void add_OnConnectionComplete(System.EventHandler<ConnectionCompleteParams> value)
    public System.Void add_OnIntellisenseReady(System.EventHandler<IntelliSenseReadyParams> value)
    public System.Void add_OnQueryComplete(System.EventHandler<QueryCompleteParams> value)
    public System.Void add_OnQueryMessage(System.EventHandler<MessageParams> value)
    public System.Threading.Tasks.Task<QueryCancelResult> CancelQueryExecutionAsync(System.Uri ownerUri)
    public System.Threading.Tasks.Task<System.Boolean> ConnectAsync(ConnectParams connectParams)
    public System.Threading.Tasks.Task<System.Boolean> DisconnectAsync(System.Uri ownerUri)
    public System.Void Dispose()
    public System.Threading.Tasks.Task<QueryExecuteSubsetResult> ExecuteQueryExecuteSubsetAsync(QueryExecuteSubsetParams subsetParams, System.Threading.CancellationToken cancellationToken)
    public System.Threading.Tasks.Task<QueryExecuteResult> ExecuteQueryStringAsync(System.Uri ownerUri, System.String queryString, System.Threading.CancellationToken contextCancellationToken)
    public System.Void HandleConnectionCompletion(ConnectionCompleteParams connParams)
    public System.Void HandleIntellisenseReady(IntelliSenseReadyParams readyParams)
    public System.Void HandleQueryCompletion(QueryCompleteParams queryParams)
    public System.Void HandleQueryMessage(MessageParams messageParams)
    public System.Void Initialize()
    public System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.DotNet.Interactive.Events.CompletionItem>> ProvideCompletionItemsAsync(System.Uri fileUri, Microsoft.DotNet.Interactive.Commands.RequestCompletions command)
    public System.Void remove_OnConnectionComplete(System.EventHandler<ConnectionCompleteParams> value)
    public System.Void remove_OnIntellisenseReady(System.EventHandler<IntelliSenseReadyParams> value)
    public System.Void remove_OnQueryComplete(System.EventHandler<QueryCompleteParams> value)
    public System.Void remove_OnQueryMessage(System.EventHandler<MessageParams> value)
    public System.Threading.Tasks.Task SendTextChangeNotificationAsync(System.Uri ownerUri, System.String newText, System.String oldText)
  public static class ToolsServiceClientExtensions
  public abstract class ToolsServiceKernel : Microsoft.DotNet.Interactive.Kernel, Microsoft.DotNet.Interactive.IKernelCommandHandler<Microsoft.DotNet.Interactive.Commands.RequestCompletions>, Microsoft.DotNet.Interactive.IKernelCommandHandler<Microsoft.DotNet.Interactive.Commands.SubmitCode>, Microsoft.DotNet.Interactive.ValueSharing.ISupportGetValue, Microsoft.DotNet.Interactive.ValueSharing.ISupportSetClrValue, System.IDisposable
    protected System.Boolean CanDeclareVariable(System.String name, System.Object value, ref System.String& msg)
    public System.Threading.Tasks.Task ConnectAsync()
    protected System.String CreateVariableDeclaration(System.String name, System.Object value)
    protected System.Collections.Generic.Dictionary<System.String,System.Collections.Generic.IReadOnlyCollection<Microsoft.DotNet.Interactive.Formatting.TabularData.TabularDataResource>> get_QueryResults()
    public System.Collections.Generic.IReadOnlyCollection<Microsoft.DotNet.Interactive.ValueSharing.KernelValueInfo> GetValueInfos()
    public System.Threading.Tasks.Task HandleAsync(Microsoft.DotNet.Interactive.Commands.SubmitCode command, Microsoft.DotNet.Interactive.KernelInvocationContext context)
    public System.Threading.Tasks.Task HandleAsync(Microsoft.DotNet.Interactive.Commands.RequestCompletions command, Microsoft.DotNet.Interactive.KernelInvocationContext context)
    public System.Threading.Tasks.Task SetValueAsync(System.String name, System.Object value, System.Type declaredType = null)
    protected System.Void StoreQueryResults(System.Collections.Generic.IReadOnlyCollection<Microsoft.DotNet.Interactive.Formatting.TabularData.TabularDataResource> results, System.CommandLine.Parsing.ParseResult commandKernelChooserParseResult)
    public System.Boolean TryGetValue<T>(System.String name, ref T& value)
  public static class Utils
    public static System.String AsDoubleQuotedString()
    public static System.String AsSingleQuotedString()
  public class VersionedTextDocumentIdentifier : TextDocumentIdentifier
    .ctor()
    public System.Int32 Version { get; set;}
