Microsoft.DotNet.Interactive.PowerShell.Commands.EnterAzShellCommand::.ctor()
public  System.Guid Microsoft.DotNet.Interactive.PowerShell.Commands.EnterAzShellCommand.TenantId { get; set; }
protected  System.Void Microsoft.DotNet.Interactive.PowerShell.Commands.EnterAzShellCommand.ProcessRecord(  )
Microsoft.DotNet.Interactive.PowerShell.Commands.OutDisplayCommand::.ctor()
public  System.String Microsoft.DotNet.Interactive.PowerShell.Commands.OutDisplayCommand.CustomMimeType { get; set; }
public  System.Object Microsoft.DotNet.Interactive.PowerShell.Commands.OutDisplayCommand.InputObject { get; set; }
public  System.String Microsoft.DotNet.Interactive.PowerShell.Commands.OutDisplayCommand.MimeType { get; set; }
public  System.Management.Automation.SwitchParameter Microsoft.DotNet.Interactive.PowerShell.Commands.OutDisplayCommand.PassThru { get; set; }
protected  System.Void Microsoft.DotNet.Interactive.PowerShell.Commands.OutDisplayCommand.ProcessRecord(  )
public  System.Globalization.CultureInfo Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.CurrentCulture { get; }
public  System.Globalization.CultureInfo Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.CurrentUICulture { get; }
public  System.Guid Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.InstanceId { get; }
public  System.Boolean Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.IsRunspacePushed { get; }
public  System.String Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.Name { get; }
public  System.Management.Automation.PSObject Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.PrivateData { get; }
public  System.Management.Automation.Runspaces.Runspace Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.Runspace { get; }
public  System.Management.Automation.Host.PSHostUserInterface Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.UI { get; }
public  System.Version Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.Version { get; }
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.EnterNestedPrompt(  )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.ExitNestedPrompt(  )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.NotifyBeginApplication(  )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.NotifyEndApplication(  )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.PopRunspace(  )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.PushRunspace( System.Management.Automation.Runspaces.Runspace runspace )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHost.SetShouldExit( System.Int32 exitCode )
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.BackgroundColor { get; set; }
public  System.Management.Automation.Host.Size Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.BufferSize { get; set; }
public  System.Management.Automation.Host.Coordinates Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.CursorPosition { get; set; }
public  System.Int32 Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.CursorSize { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.ForegroundColor { get; set; }
public  System.Boolean Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.KeyAvailable { get; }
public  System.Management.Automation.Host.Size Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.MaxPhysicalWindowSize { get; }
public  System.Management.Automation.Host.Size Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.MaxWindowSize { get; }
public  System.Management.Automation.Host.Coordinates Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.WindowPosition { get; set; }
public  System.Management.Automation.Host.Size Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.WindowSize { get; set; }
public  System.String Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.WindowTitle { get; set; }
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.FlushInputBuffer(  )
public  System.Management.Automation.Host.BufferCell[,] Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.GetBufferContents( System.Management.Automation.Host.Rectangle rectangle )
public  System.Int32 Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.LengthInBufferCells( System.String source, System.Int32 offset )
public  System.Int32 Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.LengthInBufferCells( System.String source )
public  System.Int32 Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.LengthInBufferCells( System.Char c )
public  System.Management.Automation.Host.KeyInfo Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.ReadKey( System.Management.Automation.Host.ReadKeyOptions options )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.ScrollBufferContents( System.Management.Automation.Host.Rectangle source, System.Management.Automation.Host.Coordinates destination, System.Management.Automation.Host.Rectangle clip, System.Management.Automation.Host.BufferCell fill )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.SetBufferContents( System.Management.Automation.Host.Coordinates origin, System.Management.Automation.Host.BufferCell[,] contents )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostRawUserInterface.SetBufferContents( System.Management.Automation.Host.Rectangle rectangle, System.Management.Automation.Host.BufferCell fill )
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.DebugBackgroundColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.DebugForegroundColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.ErrorAccentColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.ErrorBackgroundColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.ErrorForegroundColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.FormatAccentColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.ProgressBackgroundColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.ProgressForegroundColor { get; set; }
public  System.Management.Automation.Host.PSHostRawUserInterface Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.RawUI { get; }
public  System.Boolean Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.SupportsVirtualTerminal { get; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.VerboseBackgroundColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.VerboseForegroundColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WarningBackgroundColor { get; set; }
public  System.ConsoleColor Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WarningForegroundColor { get; set; }
public  System.Collections.Generic.Dictionary<System.String,System.Management.Automation.PSObject> Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.Prompt( System.String caption, System.String message, System.Collections.ObjectModel.Collection<System.Management.Automation.Host.FieldDescription> descriptions )
public  System.Int32 Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.PromptForChoice( System.String caption, System.String message, System.Collections.ObjectModel.Collection<System.Management.Automation.Host.ChoiceDescription> choices, System.Int32 defaultChoice )
public  System.Collections.ObjectModel.Collection<System.Int32> Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.PromptForChoice( System.String caption, System.String message, System.Collections.ObjectModel.Collection<System.Management.Automation.Host.ChoiceDescription> choices, System.Collections.Generic.IEnumerable<System.Int32> defaultChoices )
public  System.Management.Automation.PSCredential Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.PromptForCredential( System.String caption, System.String message, System.String userName, System.String targetName )
public  System.Management.Automation.PSCredential Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.PromptForCredential( System.String caption, System.String message, System.String userName, System.String targetName, System.Management.Automation.PSCredentialTypes allowedCredentialTypes, System.Management.Automation.PSCredentialUIOptions options )
public  System.String Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.ReadLine(  )
public  System.Security.SecureString Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.ReadLineAsSecureString(  )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.Write( System.ConsoleColor foregroundColor, System.ConsoleColor backgroundColor, System.String value )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.Write( System.String value )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WriteDebugLine( System.String message )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WriteErrorLine( System.String value )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WriteInformation( System.Management.Automation.InformationRecord record )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WriteLine(  )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WriteLine( System.ConsoleColor foregroundColor, System.ConsoleColor backgroundColor, System.String value )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WriteLine( System.String value )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WriteProgress( System.Int64 sourceId, System.Management.Automation.ProgressRecord record )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WriteVerboseLine( System.String message )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.Host.PSKernelHostUserInterface.WriteWarningLine( System.String message )
Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel::.ctor()
public  System.Func<System.String,System.String> Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.ReadInput { get; set; }
public  System.Func<System.String,Microsoft.DotNet.Interactive.PasswordString> Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.ReadPassword { get; set; }
public  System.Void Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.AddAccelerator( System.String name, System.Type type )
public  System.Void Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.AddModulePath( System.String modulePath )
public  System.Collections.Generic.IReadOnlyCollection<Microsoft.DotNet.Interactive.ValueSharing.KernelValueInfo> Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.GetValueInfos(  )
public  System.Threading.Tasks.Task Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.HandleAsync( Microsoft.DotNet.Interactive.Commands.SubmitCode submitCode, Microsoft.DotNet.Interactive.KernelInvocationContext context )
public  System.Threading.Tasks.Task Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.HandleAsync( Microsoft.DotNet.Interactive.Commands.RequestCompletions requestCompletions, Microsoft.DotNet.Interactive.KernelInvocationContext context )
public  System.Threading.Tasks.Task Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.HandleAsync( Microsoft.DotNet.Interactive.Commands.RequestDiagnostics requestDiagnostics, Microsoft.DotNet.Interactive.KernelInvocationContext context )
public  System.Threading.Tasks.Task Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.SetValueAsync( System.String name, System.Object value, System.Type declaredType )
public  System.Boolean Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel.TryGetValue<T>( System.String name, ref T& value )
public static  Microsoft.DotNet.Interactive.PowerShell.PowerShellKernel Microsoft.DotNet.Interactive.PowerShell.PowerShellKernelExtensions.UseProfiles(  )
