Microsoft.DotNet.Interactive
  public class AddNugetRestoreSourcesResult : AddNugetResult
    .ctor(System.Boolean succeeded, PackageReference requestedPackage, System.Collections.Generic.IReadOnlyList<ResolvedPackageReference> addedReferences = null, System.Collections.Generic.IReadOnlyCollection<System.String> errors = null)
  public class AddNugetResult
    .ctor(System.Boolean succeeded, PackageReference requestedPackage, System.Collections.Generic.IReadOnlyCollection<System.String> errors = null)
    public System.Collections.Generic.IReadOnlyCollection<System.String> Errors { get;}
    public System.Boolean Succeeded { get;}
  public abstract class ISupportNuget
    public System.Collections.Generic.IEnumerable<PackageReference> RequestedPackageReferences { get;}
    public System.Collections.Generic.IEnumerable<ResolvedPackageReference> ResolvedPackageReferences { get;}
    public System.Collections.Generic.IEnumerable<System.String> RestoreSources { get;}
    public PackageReference GetOrAddPackageReference(System.String packageName, System.String packageVersion = null)
    public System.Void RegisterResolvedPackageReferences(System.Collections.Generic.IReadOnlyList<ResolvedPackageReference> packageReferences)
    public System.Threading.Tasks.Task<PackageRestoreResult> RestoreAsync()
    public System.Void TryAddRestoreSource(System.String source)
  public static class KernelSupportsNugetExtensions
    public static T UseNugetDirective<T>()
  public class PackageRestoreContext, System.IDisposable
    .ctor()
    public System.Collections.Generic.IEnumerable<PackageReference> RequestedPackageReferences { get;}
    public System.Collections.Generic.IEnumerable<ResolvedPackageReference> ResolvedPackageReferences { get;}
    public System.Collections.Generic.IEnumerable<System.String> RestoreSources { get;}
    public System.Void Dispose()
    public PackageReference GetOrAddPackageReference(System.String packageName, System.String packageVersion = null)
    public ResolvedPackageReference GetResolvedPackageReference(System.String packageName)
    public System.Threading.Tasks.Task<PackageRestoreResult> RestoreAsync()
    public System.Void TryAddRestoreSource(System.String source)
  public class PackageRestoreResult
    .ctor(System.Boolean succeeded, System.Collections.Generic.IEnumerable<PackageReference> requestedPackages, System.Collections.Generic.IReadOnlyList<ResolvedPackageReference> resolvedReferences = null, System.Collections.Generic.IReadOnlyCollection<System.String> errors = null)
    public System.Collections.Generic.IReadOnlyCollection<System.String> Errors { get;}
    public System.Collections.Generic.IReadOnlyList<ResolvedPackageReference> ResolvedReferences { get;}
    public System.Boolean Succeeded { get;}
