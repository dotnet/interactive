public static  System.String FsAutoComplete.TipFormatter.extractSignature( FSharp.Compiler.EditorServices.ToolTipText _arg1 )
public static  Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Collections.FSharpList<System.Tuple<System.String,System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.Tuple<System.String,System.String,System.String>>>> FsAutoComplete.TipFormatter.formatDocumentation( FSharp.Compiler.EditorServices.ToolTipText _arg2, System.String _arg1_0, System.Tuple<System.String[],System.String[],System.String[],System.String[],System.String[],System.String[]> _arg1_1, System.String footer, System.String cn )
public static  Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Collections.FSharpList<System.Tuple<System.String,System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.Tuple<System.String,System.String,System.String>>>> FsAutoComplete.TipFormatter.formatDocumentationFromXmlSig( System.String xmlSig, System.String assembly, System.String _arg1_0, System.Tuple<System.String[],System.String[],System.String[],System.String[],System.String[],System.String[]> _arg1_1, System.String footer, System.String cn )
public static  Microsoft.FSharp.Collections.FSharpList<Microsoft.FSharp.Collections.FSharpList<System.Tuple<System.String,System.String>>> FsAutoComplete.TipFormatter.formatTip( FSharp.Compiler.EditorServices.ToolTipText _arg1 )
public static  System.String FsAutoComplete.TipFormatter.nl<T>(  )
public static  System.String FsAutoComplete.TipFormatter.ttToString( FSharp.Compiler.Text.TaggedText[] tt )
Microsoft.DotNet.Interactive.FSharp.FSharpKernel::.ctor()
public  Microsoft.DotNet.Interactive.PackageRestoreContext Microsoft.DotNet.Interactive.FSharp.FSharpKernel.PackageRestoreContext { get; }
public  System.Collections.Generic.IEnumerable<Microsoft.DotNet.Interactive.PackageReference> Microsoft.DotNet.Interactive.FSharp.FSharpKernel.RequestedPackageReferences { get; }
public  System.Collections.Generic.IEnumerable<Microsoft.DotNet.Interactive.ResolvedPackageReference> Microsoft.DotNet.Interactive.FSharp.FSharpKernel.ResolvedPackageReferences { get; }
public  System.Collections.Generic.IEnumerable<System.String> Microsoft.DotNet.Interactive.FSharp.FSharpKernel.RestoreSources { get; }
public  Microsoft.FSharp.Collections.FSharpList<Microsoft.DotNet.Interactive.ValueSharing.KernelValue> Microsoft.DotNet.Interactive.FSharp.FSharpKernel.GetValues(  )
public  System.Type Microsoft.DotNet.Interactive.FSharp.FSharpKernel.getValueType( System.String name )
public  System.Collections.Generic.IReadOnlyCollection<Microsoft.DotNet.Interactive.ValueSharing.KernelValueInfo> Microsoft.DotNet.Interactive.FSharp.FSharpKernel.handleGetValueValueInfos(  )
public  System.Threading.Tasks.Task Microsoft.DotNet.Interactive.FSharp.FSharpKernel.handleSetValueAsync( System.String name, System.Object value, System.Type declaredType )
public  System.Boolean Microsoft.DotNet.Interactive.FSharp.FSharpKernel.handleTryGetValue<a>( System.String name, ref a& value )
public static  Microsoft.DotNet.Interactive.FSharp.FSharpKernel Microsoft.DotNet.Interactive.FSharp.FSharpKernelExtensions.UseDefaultFormatting(  )
public static  Microsoft.DotNet.Interactive.FSharp.FSharpKernel Microsoft.DotNet.Interactive.FSharp.FSharpKernelExtensions.UseDefaultNamespaces(  )
public static  Microsoft.DotNet.Interactive.FSharp.FSharpKernel Microsoft.DotNet.Interactive.FSharp.FSharpKernelExtensions.UseKernelHelpers(  )
public static  System.Void Microsoft.DotNet.Interactive.FSharp.FSharpKernelHelpers.DisplayFunctions.CSS( System.String styles )
public static  Microsoft.DotNet.Interactive.DisplayedValue Microsoft.DotNet.Interactive.FSharp.FSharpKernelHelpers.DisplayFunctions.display( System.Object value )
public static  Microsoft.AspNetCore.Html.IHtmlContent Microsoft.DotNet.Interactive.FSharp.FSharpKernelHelpers.DisplayFunctions.HTML( System.String value )
public static  System.Void Microsoft.DotNet.Interactive.FSharp.FSharpKernelHelpers.DisplayFunctions.Javascript( System.String content )
Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.FSharpScript::.ctor(Microsoft.FSharp.Core.FSharpOption<System.String[]> additionalArgs, Microsoft.FSharp.Core.FSharpOption<System.Boolean> quiet, Microsoft.FSharp.Core.FSharpOption<Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion> langVersion)
public  FSharp.Compiler.Interactive.Shell+FsiEvaluationSession Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.FSharpScript.Fsi { get; }
public  Microsoft.FSharp.Control.IEvent<Microsoft.FSharp.Control.FSharpHandler<System.Tuple<System.Object,System.Type,System.String>>,System.Tuple<System.Object,System.Type,System.String>> Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.FSharpScript.ValueBound { get; }
public  System.Tuple<Microsoft.FSharp.Core.FSharpResult<Microsoft.FSharp.Core.FSharpOption<FSharp.Compiler.Interactive.Shell+FsiValue>,System.Exception>,FSharp.Compiler.Diagnostics.FSharpDiagnostic[]> Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.FSharpScript.Eval( System.String code, Microsoft.FSharp.Core.FSharpOption<System.Threading.CancellationToken> cancellationToken )
public  Microsoft.FSharp.Control.FSharpAsync<FSharp.Compiler.EditorServices.DeclarationListItem[]> Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.FSharpScript.GetCompletionItems( System.String text, System.Int32 line, System.Int32 column )
public static  Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.Preview { get; }
public static  Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.V47 { get; }
public static  Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.V50 { get; }
public  System.Boolean Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.IsPreview { get; }
public  System.Boolean Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.IsV47 { get; }
public  System.Boolean Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.IsV50 { get; }
public  System.Int32 Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.Tag { get; }
public  System.Int32 Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.CompareTo( Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion obj )
public  System.Int32 Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.CompareTo( System.Object obj )
public  System.Int32 Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.CompareTo( System.Object obj, System.Collections.IComparer comp )
public  System.Boolean Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.Equals( System.Object obj, System.Collections.IEqualityComparer comp )
public  System.Boolean Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.Equals( Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion obj )
public  System.Boolean Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.Equals( System.Object obj )
public  System.Int32 Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.GetHashCode( System.Collections.IEqualityComparer comp )
public  System.Int32 Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.GetHashCode(  )
public  System.String Microsoft.DotNet.Interactive.FSharp.ScriptHelpers.LangVersion.ToString(  )
